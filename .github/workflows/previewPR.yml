name: previewPR

on:
  pull_request  
  
jobs:
  previewPR:
    runs-on: ubuntu-latest
    steps:            
      - name: Checkout playbooks
        uses: actions/checkout@v2
        with:
          repository: devonfw-tutorials/tutorials
          path: playbooks
          
      - id: changedfiles
        uses: jitterbit/get-changed-files@v1
        
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: |
          dirs=()
          for changed_file in ${{ steps.changedfiles.outputs.all }}; do
          
            dir="$(echo ${changed_file} | cut -d/ -f2)"           
            check="$(echo $changed_file | cut -d/ -f1)"
           
          if [[ ! " ${dirs[@]} " =~ " ${dir} " ]]; then
              if [[ "$check" ==  *"solution"* ]]; then
                MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"solution": "'$dir'"},'
                dirs+=($dir)
                echo $MATRIX_PARAMS_COMBINATIONS
              fi
           fi
          done
          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
          
    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
      
  build_pullRequest:
    runs-on: ubuntu-latest
    needs: previewPR
    strategy:
      matrix: ${{ fromJson(needs.previewPR.outputs.matrix-combinations) }}
    steps:
      - name: Clone
        uses: actions/checkout@v1
        with:
          repository: devonfw/devonfw.github.io
          ref: develop
          submodules: recursive
      
      - name: Delete old architectures
        run: |
          cd ../../
          cd architectures/devonfw.github.io
          rm -r architectures
          
      - name: Add new architectures
        uses: actions/checkout@v1
        with:
          path: architectures/devonfw.github.io
          
      - name: Move new architecure to right place
        run: |
          cd ../../
          cd devonfw.github.io
          mkdir architectures 
          cd ../
          cp -a architectures/devonfw.github.io/. devonfw.github.io/architectures
          #rm -r architectures
          
      - name: Edit pom.xml File 
        run: |
          cd ../../
          cd devonfw.github.io
          
          #sudo apt-get install xmlstarlet
          
          sed " " pom.xml
          
          echo "---------------------------------------------------------------------------------"
          pwd
          echo "---------------------------------------------------------------------------------"
          
          sed '/website/{n;s/search-engine/x/}' pom.xml > pom.xml
          
          echo "---------------------------------------------------------------------------------"
          pwd
          echo "---------------------------------------------------------------------------------"
          
          sed '/asciidoctor-stylesheet/{n;s/website/x/}' pom.xml > pom.xml
          
          echo "---------------------------------------------------------------------------------"
          pwd
          echo "---------------------------------------------------------------------------------"
          
          sed " " pom.xml

          
      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Solutions from Stack repositories
        run: |
          cd ../../
          cd devonfw.github.io
          cd architectures/scripts
          
          npm install
          node copySolutionsFromStack.js ../../devonfw-guide
          cd ../../

      - name: Copy pom files for architectures
        run: |
          chmod +x scripts/copyPomFiles.sh
          scripts/copyPomFiles.sh

      - name: npm install for architectures
        run: |
          cd scripts
          npm install
          cd ../../
          
      - name: Compile sass for architectures
        uses: gha-utilities/sass-build@v0.4.2
        with:
          source: index.scss
          destination: index.css
          
      # asciidoctor tries to load gems dynamically to convert md and scss files.
      # As this gems are not installed this is breaking the build.
      - name: Remove files that are breaking the build
        run: |
          rm README.md || true
          rm index.scss || true

      - name: Build
        run: |
          cd ../../
          cd devonfw.github.io
          
          #xmlstarlet sel -t -c "/" pom.xml 
          mvn -s ./.m2/unblock-rubygem-proxy-settings.xml clean package
          #xmlstarlet sel -t -c "/" pom.xml 

      - name: Create output for architectures
        run: |
          cd ../../
          cd devonfw.github.io

          chmod +x architectures/scripts/createOutput.sh
          architectures/scripts/createOutput.sh

      - name: Copy output of architectures
        run: |
          cd ../../
          cd devonfw.github.io

          cp -avr architectures/target/generated-docs/ target/generated-docs/website/pages/architectures/
          
      - name: Run image generate
        run: |
              cd ../../
              cd devonfw.github.io
                            
              npm install node-html-to-image-cli -g
              cd target/generated-docs/architectures/solutions/${{ matrix.solution }}
              
              mv index.html  ${{ matrix.solution }}.html
              node-html-to-image-cli ${{ matrix.solution }}.html ${{ matrix.solution }}.png 
        
      - name: Artifact build
        uses: actions/upload-artifact@v2
        with: 
          name: download-asset
          path: |
                /home/runner/work/architectures/devonfw.github.io/target/generated-docs/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.png
                /home/runner/work/architectures/devonfw.github.io/target/generated-docs/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.html
                
      - name: Test
        run: |
         cd /home/runner/work/architectures/devonfw.github.io/target/generated-docs/architectures/solutions/${{ matrix.solution }}
         pwd
         ls
          

      #- name: run buildRun.sh
       # run: sh buildRun.sh --user ${{ github.actor }} --branch ${{ github.event.pull_request.head.ref }} -p ${{ matrix.solution }}
          
