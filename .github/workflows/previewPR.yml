name: previewPR
env:
  PR_NUMBER: ${{github.event.number}}
  
on:
  pull_request_target 
  
jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout architectures
        uses: actions/checkout@v2
         
      - name: Install node environment
        uses: actions/setup-node@v2-beta
        
      - name: npm install
        run: npm install
          
      - name: View PR author
        run: echo "This PR is opened by ${{ github.event.pull_request.user.login }} ."
        
      - name: View PR Branch
        run: echo "This PR is opened by ${{ github.event.pull_request.head.repo.name }} ."
        
      - name: View PR Branch 2
        run: echo "This PR is opened by ${{ github.event.pull_request.head.repo.default_branch }} ."
        
      - name: View PR Branch 3
        run: echo "This PR is opened by ${{ github.event.pull_request.head.repo.branches_url }} ."
        
      - name: Extract branch name
        shell: bash
        run: echo " ${{ github.ref }}"
        id: extract_branch
          
      - name: Select Changed Files
        id: changedfiles
        run: | 
            pwd
            ls
            npm install @actions/core
            npm install @actions/github
            node changedFilesArchitectures.js
        
      - name: Get Architectures Checkout
        id: get_checkout
        run: node getArchitecturesCheckout.js
        
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: |
          dirs=()
          for changed_file in ${{ steps.changedfiles.outputs.changedFiles }}; do
            dir="$(echo $changed_file | cut -d/ -f2)"
            check="$(echo $changed_file | cut -d/ -f1)"
            if [[ ! " ${dirs[@]} " =~ " ${dir} " ]]; then
              if [[ "$check" ==  *"solution"* ]]; then
                  MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"solution": "'$dir'"},'
                  dirs+=($dir)
                  echo $MATRIX_PARAMS_COMBINATIONS
                  echo $changed_file
                  echo $check
                  echo ${dir}
                  echo ----
              fi
            fi
          done
          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
          
    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
      checkout_ref: ${{ steps.get_checkout.outputs.ref}}
      checkout_name: ${{ steps.get_checkout.outputs.name}}
          
      #- id: changedfiles
       # uses: jitterbit/get-changed-files@v1
        
      #- name: Setup matrix combinations
       # id: setup-matrix-combinations
        #run: |
         # dirs=()
          #for changed_file in ${{ steps.changedfiles.outputs.all }}; do
          #
           # dir="$(echo ${changed_file} | cut -d/ -f2)"           
            #check="$(echo $changed_file | cut -d/ -f1)"
           
          #if [[ ! " ${dirs[@]} " =~ " ${dir} " ]]; then
           #   if [[ "$check" ==  *"solution"* ]]; then
            #    MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"solution": "'$dir'"},'
             #   dirs+=($dir)
              #  echo $MATRIX_PARAMS_COMBINATIONS
              #fi
           #fi
          #done
          #echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
          
    #outputs:
     # matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
      
  build:
    runs-on: ubuntu-latest
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    steps:
      
      - name: Clone
        uses: actions/checkout@v2
        with:
          repository: devonfw/devonfw.github.io
          ref: develop
          #submodules: recursive
          path: devonfw.github.io
          
      - name: Add new architectures
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.user.login }}/architectures
          path: devonfw.github.io/architectures
          
      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Solutions from Stack repositories
        run: |
          pwd
          ls
          pwd
          ls devonfw.github.io
          pwd
          ls devonfw.github.io/architectures
          pwd 
          ls ../
          pwd
          ls
          cd scripts
          npm install
          node copySolutionsFromStack.js ../../devonfw-guide
          cd ../

      - name: Copy pom files for architectures
        run: |
          chmod +x scripts/copyPomFiles.sh
          scripts/copyPomFiles.sh

      - name: npm install for architectures
        run: |
          pwd 
          ls ../website
          pwd 
          ls ../website/images
          pwd
          cd scripts
          npm install
          cd ../
          
      - name: Compile sass for architectures
        uses: gha-utilities/sass-build@v0.4.2
        with:
          source: index.scss
          destination: index.css
          
      # asciidoctor tries to load gems dynamically to convert md and scss files.
      # As this gems are not installed this is breaking the build.
      - name: Remove files that are breaking the build
        run: |
          rm README.md || true
          rm index.scss || true

      - name: Build
        run: |
          
          pwd 
          ls
          cd ../
          sed " " pom.xml
          pwd 
          ls website
          pwd 
          ls website/images
          pwd
        
          mvn -s ./.m2/unblock-rubygem-proxy-settings.xml clean package

      - name: Create output for architectures
        run: |
          pwd 
          ls ../website
          chmod +x scripts/createOutput.sh
          scripts/createOutput.sh

      - name: Copy output of architectures
        run: |
            pwd 
            ls ../website

            cp -avr target/generated-docs/ ../target/generated-docs/website/pages/architectures/

          
      - name: Run image generate
        run: |  
              pwd 
              ls ../website
              npm install node-html-to-image-cli -g
              
              mv ../target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/index.html  ../target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.html
              cd ../target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}
              node-html-to-image-cli ${{ matrix.solution }}.html ${{ matrix.solution }}.png
              
              pwd 
              ls
              cd ../../../../../../../
              pwd
              ls
              
              mkdir ../previewSolutions
              mkdir ../previewSolutions/${{ matrix.solution }}
              mv ../target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }} ../previewSolutions/${{ matrix.solution }}
            
        
      - name: Artifact build
        uses: actions/upload-artifact@v2
        with: 
          name: download-asset
          path: |
                #/home/runner/work/architectures/devonfw.github.io/target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.png
                #/home/runner/work/architectures/devonfw.github.io/target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.html
                #/home/runner/work/architectures/devonfw.github.io/target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution  }}
                /home/runner/work/architectures/devonfw.github.io/previewSolutions/${{ matrix.solution }}
                  
