name: previewPR

env:
  PR_NUMBER: ${{github.event.number}}
  
on:
  pull_request_target 
  
  
  
jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    
    
    steps:
      - name: Checkout architectures
        uses: actions/checkout@v2
      - name: Install node environment
        uses: actions/setup-node@v2-beta
        
      - name: npm install
        run: |
            cd scripts
            npm install
            npm install @actions/core
            npm install @actions/github
            cd ../
          
      - name: Select Changed Files
        id: changedfiles
        run: | 
            cd scripts
            node changedFilesArchitectures.js
            cd ../
        env:
          PR_OWNER: ${{github.event.pull_request.head.repo.owner.login}}
          PR_REPO: ${{github.event.pull_request.head.repo.name}}
        
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: |
          echo
        
          dirs=()
          for changed_file in ${{ steps.changedfiles.outputs.changedFiles }}; do
            dir="$(echo $changed_file | cut -d/ -f2)"
            check="$(echo $changed_file | cut -d/ -f1)"
            if [[ ! " ${dirs[@]} " =~ " ${dir} " ]]; then
              if [[ "$check" ==  *"solution"* ]]; then
                  MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"solution": "'$dir'"},'
                  dirs+=($dir)
              fi
            fi
          done
          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
          
          if [ "$MATRIX_PARAMS_COMBINATIONS" == "" ]; then
            echo leer
            MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"solution": "'noChange'"}'
            echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
          else
            echo voll
          fi

    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
      
      
      
      
  build:
    runs-on: ubuntu-latest
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    steps:
      
      
      - name: Clone
        uses: actions/checkout@v2
        with:
          repository: devonfw/devonfw.github.io
          ref: develop
          submodules: true
          
      - name: Add new architectures
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          path: architectures
          
      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Solutions from Stack repositories
        run: |        
          cd architectures/scripts
          npm install
          node copySolutionsFromStack.js ../../devonfw-guide
          cd ../../

      - name: Copy pom files for architectures
        run: |
          chmod +x architectures/scripts/copyPomFiles.sh
          architectures/scripts/copyPomFiles.sh

      - name: Copy pom files for tutorials
        run: |
          chmod +x wiki-tutorials/scripts/copyPomFiles.sh
          wiki-tutorials/scripts/copyPomFiles.sh

      - name: npm install for architectures
        run: |
          cd architectures/scripts
          npm install
          cd ../../
          
      - name: Compile sass for architectures
        uses: gha-utilities/sass-build@v0.4.2
        with:
          source: architectures/index.scss
          destination: architectures/index.css
          
      - name: Compile sass for tutorials
        uses: gha-utilities/sass-build@v0.4.2
        with:
          source: wiki-tutorials/index.scss
          destination: wiki-tutorials/index.css
          
      - name: Remove files that are breaking the build
        run: |
          rm architectures/README.md || true
          rm architectures/index.scss || true
          rm wiki-tutorials/README.md || true
          rm wiki-tutorials/index.scss || true

      - name: Build
        run: mvn -s ./.m2/unblock-rubygem-proxy-settings.xml clean package

      - name: Create output for architectures
        run: |
          chmod +x architectures/scripts/createOutput.sh
          architectures/scripts/createOutput.sh

      - name: Copy output of architectures
        run: cp -avr architectures/target/generated-docs/ target/generated-docs/website/pages/architectures/
          
      - name: Run image generate
        run: |
        
              if [ "${{ matrix.solution }}" == "noChange" ]; then
                echo ${{ matrix.solution }}
              else
                mv target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/index.html  target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.html
                cd target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}
                
                npm install --global pageres-cli
                pageres ${{ matrix.solution }}.html 1280x800 --format=png --filename="${{ matrix.solution }}"
              fi
              
      - name: Artifact build upload
        uses: actions/upload-artifact@v2
        with: 
          name: my-artifact
          path: target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.png
          if-no-files-found: ignore
          
          
          
          
  comment:
      needs: build
      runs-on: ubuntu-latest
      steps:
          
      - name: Upload Comment
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            the artifact has been generated and you can find a preview of your change here: Actions - select your pull request workflow - scroll to the bottom, there you should be able to download the artifact (only works if something has been changed in solutions)
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: true 
      
        
