name: previewPR

on:
  pull_request  
  
jobs:
  previewPR:
    runs-on: ubuntu-latest
    steps:            
      - name: Checkout playbooks
        uses: actions/checkout@v2
        with:
          repository: devonfw-tutorials/tutorials
          path: playbooks
          
      - id: changedfiles
        uses: jitterbit/get-changed-files@v1
        
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: |
          dirs=()
          for changed_file in ${{ steps.changedfiles.outputs.all }}; do
          
            dir="$(echo ${changed_file} | cut -d/ -f2)"           
            check="$(echo $changed_file | cut -d/ -f1)"
           
          if [[ ! " ${dirs[@]} " =~ " ${dir} " ]]; then
              if [[ "$check" ==  *"solution"* ]]; then
                MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"solution": "'$dir'"},'
                dirs+=($dir)
                echo $MATRIX_PARAMS_COMBINATIONS
              fi
           fi
          done
          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
          
    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
      
  build_pullRequest:
    runs-on: ubuntu-latest
    needs: previewPR
    strategy:
      matrix: ${{ fromJson(needs.previewPR.outputs.matrix-combinations) }}
    steps:
    
      - name: Clone
        uses: actions/checkout@v1
        with:
          repository: devonfw/devonfw.github.io
          ref: develop
          submodules: recursive
      
      - name: Delete old architectures
        run: |
          cd ../
          rm -r architectures
          rm -r devonfw.github.io/architectures
          mkdir devonfw.github.io/architectures
          
      - name: Add new architectures
        uses: actions/checkout@v1
        with:
          path: devonfw.github.io/architectures
          
      - name: Edit pom.xml File 
        run: |
          
          sudo apt-get install xmlstarlet
          
          pwd 
          ls
          cd ../
          pwd 
          ls
          
          sed " " pom.xml
          
          echo "---------------------------------------------------------------------------------"
          pwd
          echo "---------------------------------------------------------------------------------"
          
          #sed -i -e '/website/{n;s/search-engine//}' pom.xml 
          #sed -i -e '/website/{n;s/search-engine/test1/}' pom.xml 
          
          #sed -i  -e '/<module>/,/<\/module>/d' pom.xml
          
          ##sed -i  -e '/<module>website/,/<\/module>/d' pom.xml
          
          sed " " pom.xml
          
          echo "---------------------------------------------------------------------------------"
          pwd
          echo "---------------------------------------------------------------------------------"
          
          #sed -i -e '/asciidoctor-stylesheet/{n;s/website//}' pom.xml
          #sed -i -e '/asciidoctor-stylesheet/{n;s/website/test2/}' pom.xml
          
          ##sed -i  -e '/<module>search-engine/,/<\/module>/d' pom.xml
          
          echo "---------------------------------------------------------------------------------"
          pwd
          echo "---------------------------------------------------------------------------------"
          
          sed " " pom.xml

          
      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Solutions from Stack repositories
        run: |
          #cd architectures/scripts
          cd scripts
          
          npm install
          node copySolutionsFromStack.js ../../devonfw-guide
          #cd ../../

      - name: Copy pom files for architectures
        run: |
          chmod +x scripts/copyPomFiles.sh
          scripts/copyPomFiles.sh

      - name: npm install for architectures
        run: |
          cd scripts
          npm install
          #cd ../../
          
      - name: Compile sass for architectures
        uses: gha-utilities/sass-build@v0.4.2
        with:
          source: index.scss
          destination: index.css
          
      # asciidoctor tries to load gems dynamically to convert md and scss files.
      # As this gems are not installed this is breaking the build.
      - name: Remove files that are breaking the build
        run: |
          rm README.md || true
          rm index.scss || true

      - name: Build
        run: |
          
          pwd 
          ls
          cd ../
          sed " " pom.xml
          pwd 
          ls 
        
          mvn -s ./.m2/unblock-rubygem-proxy-settings.xml clean package

      - name: Create output for architectures
        run: |
          pwd
          ls
          #cd ../
          pwd
          ls
          pwd
          ls 
          pwd
          ls scripts
          chmod +x scripts/createOutput.sh
          scripts/createOutput.sh

      - name: Copy output of architectures
        run: |
          pwd
          ls
          #cd ../
          pwd
          ls target
          pwd
          ls target/generated-docs
          pwd
          ls target/generated-docs/website
          pwd
          ls target/generated-docs/website/pages
          pwd
          ls target/generated-docs/website/pages/architectures/
          cp -avr target/generated-docs/ target/generated-docs/website/pages/architectures/
          
      - name: Run image generate
        run: |  
              pwd
              ls
              #cd ../
              pwd
              ls
              npm install node-html-to-image-cli -g
              mv target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/index.html  target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.html
              node-html-to-image-cli target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.html target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.png 
              pwd
              ls
        
      - name: Artifact build
        uses: actions/upload-artifact@v2
        with: 
          name: download-asset
          path: |
                /home/runner/work/architectures/devonfw.github.io/architectures/target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.png
                /home/runner/work/architectures/devonfw.github.io/architectures/target/generated-docs/website/pages/architectures/solutions/${{ matrix.solution }}/${{ matrix.solution }}.html
                
      - name: Test
        run: |
         cd /home/runner/work/architectures/devonfw.github.io/target/generated-docs/architectures/solutions/${{ matrix.solution }}
         pwd
         ls
                  
