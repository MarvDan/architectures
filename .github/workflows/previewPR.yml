name: previewPR

on:
  pull_request_target    
  
jobs:
  previewPR:
    runs-on: ubuntu-latest
    steps:
    
    
      - name: Clone new architecture
        uses: actions/checkout@v1
        with:
          destination: devonfw.github.io/
          submodules: recursive
          
          
      - name: Run maven generate
        run: |
              cd testFolder
              ls
              #chmod +x pom.xml
              mvn clean package
              ls


      #- uses: actions/checkout@v2
      - name: Run image generate
      #  uses: actions/setup-node@v2
      #  with:
      #    node-version: '14'
        run: |
              cd testFolder
              npm install node-html-to-image-cli -g
              pwd 
              ls target
              cd target/generated-docs
              node-html-to-image-cli index.html image.png 
      
      
     
      #- name: artifacts1
       # run: |
        #    #mkdir testerFolder
         #   pwd
          #  ls testFolder
           # pwd
            #ls testFolder/target
        
      #- name: artifacts2
       # run: |
             #cd testerFolder
             #echo 'testEcho' > testFile.html
             #cd ..
             
        
      - name: artifacts3
        uses: actions/upload-artifact@v2
        with: 
          name: download-asset
          path: testFolder/target/generated-docs/image.png
      
      
  -name: workflow artifact pull request comment
      # You may pin to the exact commit or the version.
      # uses: tonyhallett/artifacts-url-comments@0965ff1a7ae03c5c1644d3c30f956effea4e05ef
  uses: tonyhallett/artifacts-url-comments@v1.1.0
  with:
        # used to restrict the number of pull requests for pull workflow - all | closed | open
        pullState: # optional, default is open
        # payload if using https://github.com/tonyhallett/workflow-run-conclusion-dispatch-action
        workflowPayload: # optional
        # fail if no artifacts
        errorNoArtifacts: # optional, default is true
        # add to pull or issues or pullandissues
        addTo: # default is pull
        # prefix the comment
        prefix: # optional
        # suffix the comment
        suffix: # optional
        # comma delimited names of artifacts to include
        includes: # optional
        # format to be applied to all
        format: # optional, default is url
        # instead of applying same format to all - array of objects {name:string,format?:string}
        includesFormatted: # optional
        # should matching be case sensitive
        caseSensitive: # optional, default is false
        # words that indicate associated issue
        closeWords: # optional, default is close, closes, closed, fix, fixes, fixed, resolve, resolves, resolved
        # look in the pull request title for issues
        usePullTitle: # optional, default is true
        # look in the pull request body for issues
        usePullBody: # optional, default is true
        # look in the pull request commit messages for issues
        useCommitMessages: # optional, default is true
        # look in the pull request branch name for issues
        useBranch: # optional, default is true
        # words that form part of an issue branch name
        branchIssuesWords: # optional, default is issue, issues
        # delimiters of a matching branch name
        branchDelimiters: # optional, default is _, -
      
      #- name: Cache local Maven repository
       # uses: actions/cache@v2
        #with:
          #path: ~/.m2/repository
         # key: ${{runner.os}}-maven-${{hashFiles('**/pom.xml') }}
          #restore-keys: |
           # ${{runner.os }}-maven-
      #- name: Setup Node
       # uses: actions/setup-node@v2


      #- name: Solutions from Stack repositories
       # run: |
         #cd architectures/scripts
         # cd scripts
          #npm install 
          #node copySolutionsFromStack.js ../../devonfw-guide
          #cd ../../
          
      - name: Copy pom files for architectures
        run: |
          chmod +x scripts/copyPomFiles.sh
          scripts/copyPomFiles.sh
          
      - name: npm install for architectures
        run: |
          cd scripts
          npm install
          cd ../../
          
      - name: Compile sass for architectures
        uses: gha-utilities/sass-build@v0.4.2
        with:
          source: index.scss
          destination: index.css


      # asciidoctor tries to load gems dynamically to convert md and scss files.
      # As this gems are not installed this is breaking the build.
      - name: Remove files that are breaking the build
        run: |
          rm README.md || true
          rm index.scss || true
          
      - name: Build
        run: |
            #  cd ../../../../../
              pwd
              ls /home         
           #   mvn -s .m2/unblock-rubygem-proxy-settings.xml clean package
